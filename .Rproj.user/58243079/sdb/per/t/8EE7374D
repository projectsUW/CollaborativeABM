{
    "collab_server" : "",
    "contents" : "# Current Results\n\nExperiment details:\n\n* **\"tableTalk?\"** is always true. \n    + It means people can only interact when they are at part of the discussion group.\n\n* **\"recomputePreference?\"** is always true\n    + When people talk at the table, they can change their positions.\n    \n* **\"strategy\"** can be: \"bridge\" \"random\" \"closeness\" \"influential\"\n    + This is how you select a person to be at the table, according to this value within the network.\n    \n* **\"firstAgree?\"** can be false or true\n    + If the people invited in the first round (one per group) agree by default.\n    \n* **\"invite?\"** is always true\n    + Anybody at the table can invite.\n\n* **\"InitialReach\"** could be 5 10 15\n    + The bigger the value the more coonected the network\n    \n* **\"friendOfFriends?\"** is always true\n    + People at the table can invite friends of friends.\n\n* **\"Groups\"** could be 3 6 9\n    + Number of initial groups\n    \n* **\"biasJoe\"** can be \"Own\" \"GovAndOwn\" \"AsGov\"\n    + Strategy that the people at the table follow when inviting.\n    \n* **\"PopStakeholders\"** could be 100 200 300.\n    + Population in the simulation (without the government, one node).\n\n<font color=\"red\">The output variables are:</font>\n\n* <font color=\"red\">MaxSupport:</font>\n    + The max level of support that a community reached during one simulation run.\n    \n* <font color=\"red\">MaxMoment:</font>\n    + The moment when the max level of support was reached.\n\n**Each combination has been repeated only 100 times** (64800 runs), the results follow:\n\n```{r, eval=TRUE, echo=FALSE, message=FALSE}\n#setwd(\"win/user/CollaborativeABM\")\n#res=read.csv(\"res10.csv\",skip = 6)\nres1=read.csv(\"GovGluCollabNetReporterW experiment-table.csv\",skip = 6)\nres2=read.csv(\"GovGluCollabNetReporter experiment-table.csv\",skip = 6)\nres=rbind(res1,res2)\n\nnew_res = read.csv('NewExperiment.csv',skip = 6)\ntemp = new_res %>% group_by(X.run.number.) %>% summarise(maximum_actual_size = max(count.people.with..hasVoice...1.))\nnew_res = left_join(new_res,temp)\n\n\n\nlibrary(magrittr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(viridis)\nresNew=as.data.frame(res %>% group_by(X.run.number.) %>% filter(X.step. == max(X.step.)))\nresNew=resNew[!resNew$maxsupport==0,]\n\n\n\n\nnew_res = filter(new_res,X.step.==11)\nnew_res$finalsupport = new_res$count.people.with..support...1./new_res$count.people.with..hasVoice...1.\n\nhead(new_res)\n7/20\n14/100\n```\n\n\n```{r, eval=TRUE, echo=FALSE, message=FALSE, fig.height=6,fig.width=10}\n\nf1_old <- ggplot(resNew, aes(as.factor(Groups), maxsupport)) + \n  #geom_boxplot(outlier.shape = NA) +  \n  geom_jitter(width = 0.7,aes(colour = resNew$firstAgree),alpha=0.1)  + \n  guides(colour = guide_legend(override.aes = list(alpha = 1,size=10)))\n\nf1_old + facet_grid(PopStakeholders ~ strategy) + \n  labs(list(title = \"Distribution of Support per Strategy\\n organized by Population & Coalitions\", x = \"Groups\", y = \"Max Support\",colour = \"First Agree?\")) + theme_tufte(ticks=F) +\n  scale_y_continuous(breaks=c(0.25,0.75)) + scale_colour_colorblind() +\n  scale_x_discrete(name='Coalitions') +\n   theme( strip.text=element_text(size=16),\n            axis.title=element_text(size=16),\n           legend.title=element_text(size=16), legend.text=element_text(size=14))\n\n\nf1_new <- ggplot(new_res,\n                 aes(as.factor(Groups), count.people.with..support...1./\n                       count.people.with..hasVoice...1.))+\n                #     maxsupport)) + \n  geom_jitter(width = 0.7,alpha=0.1)  + \n  #  geom_boxplot(outlier.shape = NA) +  \n  guides(colour = guide_legend(override.aes = list(alpha = 1,size=10)))\n\nf1_new + facet_grid(PopStakeholders ~ strategy) + \n  labs(list(title = \"Distribution of Support per Strategy\\n organized by Population & Coalitions\", x = \"Groups\", y = \"Max Support\",colour = \"First Agree?\")) + theme_tufte(ticks=F) +\n  scale_y_continuous(breaks=c(0.25,0.75)) + scale_colour_colorblind() +\n  scale_x_discrete(name='Coalitions') +\n   theme( strip.text=element_text(size=16),\n            axis.title=element_text(size=16),\n           legend.title=element_text(size=16), legend.text=element_text(size=14)) \n\ntemp = new_res %>% group_by(PopStakeholders,strategy,Groups) %>% summarise(med_maxsupport = median(maxsupport))\n\n\n\n\n```\n\nIn this plot we are interested to know when max support was reached. One key element is te strategy followed to invite people into the discussion; then, we want to having some intelleigence on the network of o particular group could beat simply invitaing people randomly. Please notice:\n\n* The differences are not relevant when the number of groups in society are 6 or 9.\n* Only closeness, on average (median value), could beat random selection, even if the population size differs.\n* With less people (100), closeness could beat random selection highly due to, in this case, scenarios when the first people invited to the discussion need not be in agreement (firstAgree? is FALSE).\n* With 200 as population size, the closeness strategy could beat random strategy, and this happens mostly when first people invited agreed, and when in random selection first people invited need not agree.\n\nIt seems so far, that having a small amount of groups gets a higher level of support.\nThe plot below suggests that the mean support is above 25% and below 40% for all cases\n\n```{r, eval=TRUE, echo=FALSE, message=FALSE, fig.height=6,fig.width=10}\n\n\nf3_old = ggplot(resNew, aes(maxsupport,..density..,colour=as.factor(Groups))) +  geom_freqpoly(binwidth = 0.0125,) +facet_grid(PopStakeholders ~ strategy) + labs(title = \"Distribution (density) of Support organized\\n by Strategy, Population & Coalitions\",colour=\"Coalitions\") + theme_tufte(ticks=F) +\n  scale_x_continuous(breaks=c(0.25,0.75),name='Max Support') +scale_colour_colorblind() +\n  scale_y_continuous(name='') + \n  theme(axis.text.y=element_blank(),\n              strip.text=element_text(size=16), axis.title=element_text(size=16),                legend.title=element_text(size=16),                  legend.text=element_text(size=14))\n\nnew_res$G_labels = paste(new_res$Groups,'coalitions')\n\nf3_new = \n  ggplot(new_res) + \n#geom_freqpoly(binwidth = 0.0125) +\ngeom_density(\n  aes(x = maxsupport,colour=as.factor(max_at_table),\n    #  fill = as.factor(max_at_table),\n      alpha = 0.4),\n             adjust=1.5,trim=T,lwd = 0.75,alpha = 0.7) +\n  #geom_density(\n   # aes(x = finalsupport,colour=as.factor(max_at_table),\n    #    fill = as.factor(max_at_table),\n     #   alpha = 0.4,linetype = '3'),\n      #         adjust=1.5,trim=T,lwd = 0.75,alpha = 0.7) +\n  facet_wrap(~G_labels,nrow=2)+\n  labs(title = \"Distribution (density) of Support organized\\n by Group Size, Coalitions, and Invitation Strategy\",colour=\"Max Group Size\",fill=\"Max Group Size\") + theme_tufte(ticks=F) +\n  scale_x_continuous(breaks=c(0.25,0.75),name='Support')+ scale_colour_colorblind() +  scale_fill_colorblind()+\n  scale_y_continuous(name='') + \n  theme(axis.text.y=element_blank(),\n        legend.position = c(0.75,0.25),\n    #    legend.direction = 'horizontal',\n              strip.text=element_text(size=16), axis.title=element_text(size=16),        \naxis.text=element_text(size=14),\n        legend.title=element_text(size=16),                  legend.text=element_text(size=14)) + \n#  scale_linetype_manual(name = 'Moment',values = c(1,4),labels=c('Max','End'))+\n  guides(colour = guide_legend(override.aes=list(size=1)))\n\nf3_new\n\n```\n\n\nThe plot below suggests that the more voice is achieved, the lower the max level of support. It also confirms that smaller groups give higher support levels.\n\nIt is also clear that the highest levels of support are achieved when the people participation is below the 25% of the population.\n\n```{r, eval=TRUE, echo=FALSE, message=FALSE, fig.height=6,fig.width=10}\nf4_old <- ggplot(resNew, aes(maxvoice, maxsupport)) + geom_point(aes(color=as.factor(Groups)),alpha = 0.3,position = \"jitter\")\nf4_old + facet_grid(PopStakeholders ~ strategy) + \n  labs(title = \"Relationship of max support and max voice organized by\\n  inviting strategy, population, & number of coalitions\",x=\"Representation level when max support achieved\",y=\"max level of support achieved\", colour=\"Coalitions\") + guides(colour = guide_legend(override.aes = list(alpha = 1,size=10))) + theme_tufte(ticks=F) + \n  scale_y_continuous(breaks=c(0.25,0.75),name='Max Support Achieved') +\n  scale_x_continuous(breaks=c(0.25,0.75)) +\n  scale_colour_colorblind() + #+ stat_ellipse(aes(colour=as.factor(Groups)))+     \n  theme(                              strip.text=element_text(size=16),\n                                      axis.title=element_text(size=16),\n                                      legend.title=element_text(size=16),\n                                      legend.text=element_text(size=14))\n\nf4_new <- ggplot(new_res, aes(x=count.people.with..hasVoice...1., \n                              y = maxsupport))+\n                          #    y = maxsupport)) + \n  geom_point(aes(color=as.factor(Groups)),alpha = 0.1,position = \"jitter\")\nf4_new + facet_grid(PopStakeholders ~ strategy) + \n  labs(title = \"Max support against max voice organized by\\n  invitation strategy, population, & number of coalitions\",\n       x=\"# group members when max support achieved\",y=\"max level of support achieved\", colour=\"Coalitions\") + \n  guides(colour = guide_legend(override.aes = list(alpha = 1,size=6))) + theme_tufte(ticks=F) + \n  scale_y_continuous(breaks=c(0.25,0.75),name='Max Support Achieved') +\n  scale_x_continuous(breaks=c(10,30)) +\n  scale_colour_colorblind() + #+ stat_ellipse(aes(colour=as.factor(Groups)))+ \n  theme(                              strip.text=element_text(size=16),\n                                      axis.title=element_text(size=16),\n                                      legend.title=element_text(size=16),\n                                      legend.text=element_text(size=14)\n                                     # legend.position = c(0.8,0.25)\n                                      )\n\nf4_new\n```\n\n```{r eval=TRUE, echo=FALSE, message=FALSE, fig.height=6,fig.width=10}\nlibrary(viridis)\nggplot(resNew,aes(x=maxmoment,y=maxsupport,colour=maxvoice)) + geom_jitter() + \n  scale_color_viridis(name='Representation',begin=1,end=0) + theme_tufte(ticks=F) + \n  scale_y_continuous(breaks=c(0.25,0.75),name='Max Support Achieved') +\n  scale_x_continuous(breaks=c(4,6,8,10),name='Meeting When Max Support Achieved')\n\n\n\nf5_old = ggplot(resNew,aes(y=maxsupport,x=biasJoe,colour=maxvoice)) + geom_jitter(alpha=0.2)+ \n  theme_tufte(ticks=F) +\n  scale_color_viridis(name='Proportion\\nRepresented',\n                                             option = 'D',\n          guide = guide_legend(alpha=1)) +\n    scale_y_continuous(breaks=c(0.25,0.75),name='Max Support Achieved') +\n  scale_x_discrete(labels=c(\"Government's\",\"Own + Government's\",\"Own\"),\n                   name='Invitation Strategy',expand=c(0,0)) +\n  #theme(legend.position = c(0.5,0.1)) +\n   guides(colour = guide_legend(override.aes = list(alpha = 1),title.position='top'))+\n  theme(                             \n                                      axis.title=element_text(size=16),\n                                      axis.text=element_text(size=14),\n                                      legend.title=element_text(size=16),\n                                      legend.text=element_text(size=14))\n\nf5_new = ggplot(new_res,aes(y=maxsupport,x=biasJoe,colour=count.people.with..hasVoice...1.)) + geom_jitter(alpha=0.2)+ \n  theme_tufte(ticks=F) +\n  scale_color_viridis(name='# participants',\n                                             option = 'D',\n          guide = guide_legend(alpha=1)) +\n    scale_y_continuous(breaks=c(0.25,0.75),name='Max Support Achieved') +\n  scale_x_discrete(labels=c(\"Government's\",\"Own + Government's\",\"Own\"),\n                   name='Invitation Strategy',expand=c(0,0)) +\n  #theme(legend.position = c(0.5,0.1)) +\n   guides(colour = guide_legend(override.aes = list(alpha = 1),title.position='top'))+\n  theme(                             \n                                      axis.title=element_text(size=16),\n                                      axis.text=element_text(size=14),\n                                      legend.title=element_text(size=16),\n                                      legend.text=element_text(size=14))\nf5_new\n```\n\n```{r}\nnew_res = new_res %>% mutate(person_count = count.people.with..hasVoice...1.,\n                             Exit_Prob = round(1/ExitAtOneOf,2)) %>%\n  mutate(prob =  paste0('p = ',Exit_Prob), \n         Group_Size =  paste0('Size = ',max_at_table))\n                             \n```\n\n```{r}\n\ntemp = new_res %>% group_by(X.run.number.) %>% summarise(diff_from_max_allowed = max_at_table - person_count,diff_from_max_actual = maximum_actual_size - person_count)\nnew_res = left_join(new_res,temp)\n\n\nf6_new <- ggplot(new_res, aes(x=count.people.with..hasVoice...1., \n                              y = finalsupport,colour=prob))+\n                          #    y = maxsupport)) + \n geom_jitter(alpha = 0.1)\n\nplot(new_res$diff_from_max_actual,new_res$finalsupport)\n\nnew_res$sup_diff = new_res$finalsupport-new_res$maxsupport\n\nggplot(new_res) + geom_histogram(aes(x=sup_diff,fill=prob,bindwidth=0.0125)) +\n  xlab('Change in support from maxmoment to final meeting') +\n  facet_wrap(~prob,nrow=2) + theme_tufte(ticks=F) + theme(                              strip.text=element_text(size=16),\n                                      axis.title=element_text(size=16),\n                                      legend.title=element_text(size=16),\n                                      legend.text=element_text(size=14),\n                                     legend.position = c(0.8,0.25)\n                                      ) \n\ntestdf = new_res %>% filter(diff_from_max_actual>0)\n\n\ntable(new_res$diff_from_max_actual)\nnrow(new_res)\ntable(new_res$finalsupport==0)\nnew_res$\nggplot(new_res,\n       aes(y=finalsupport-maxsupport,\n           x=diff_from_max_actual)) + geom_jitter()  +\n  xlab('# actors who exit')\n\ncount.people.with..hasVoice...1.\n  xlab('Change in support between max and end') + ylab(\"# people at end\")\n\n\ntest\n\n\n\nggplot(new_res) + geom_jitter(aes(y=diff_from_max_actual,x=prob),alpha = 0.1) + theme_bw() + \n  facet_wrap(~max_at_table,nrow=2) + \n  xlab('Probability of exit after a meeting if disagree')+\n  ylab('# of people at last meeting')\n\ntable(new_res$maxsupport<new_res$finalsupport)\nnew_res %>% filter(maxsupport==1&finalsupport==0)\nggplot(new_res) + \n  geom_point(aes(y=finalsupport,x=maxsupport,colour=maxsupport<finalsupport)) + theme_bw()\n\n\n  xlab('Probability of exit after a meeting if disagree')+\n  ylab('Final support level at final meeting')\n\n\n\n\nggplot(new_res,\n       aes(x=diff_from_max_actual,y=finalsupport,\n           colour = prob)) +\n  geom_jitter(alpha = 0.2) + facet_wrap(~max_at_table,nrow=2,scales='free_x')  +\n    scale_color_colorblind() + theme_tufte(ticks=F)+\n  theme(                              strip.text=element_text(size=16),\n                                      axis.title=element_text(size=16),\n                                      legend.title=element_text(size=16),\n                                      legend.text=element_text(size=14),\n                                     legend.position = c(0.8,0.25)\n                                      ) +\n    guides(colour = guide_legend(override.aes = list(alpha = 1,size=6))) +\n    scale_y_continuous(breaks=c(0.25,0.75),name = 'Final support %') +\n  scale_x_continuous(breaks=seq(5,40,5),name='# below threshold')\n           \n      \n\n  labs(title = \"Max support against max voice organized by\\n  invitation strategy, population, & number of coalitions\")+\n theme_tufte(ticks=F) + \n\n\n\n\n\n\n\n\n\ntable(test$diff_from_max_actual)\nsummary(test$diff_from_max_actual)\n?stat_smooth()\n```\n",
    "created" : 1469824417956.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1795950637",
    "id" : "8EE7374D",
    "lastKnownWriteTime" : 1470166641,
    "last_content_update" : 1470166641471,
    "path" : "~/Google Drive/CollaborativeABM/Tyler_Figures.Rmd",
    "project_path" : "Tyler_Figures.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}